head	1.1;
access;
symbols;
locks; strict;
comment	@// @;


1.1
date	2006.09.12.01.37.26;	author jk;	state Exp;
branches;
next	;
deltatype	text;
kopt	kv;
permissions	666;
commitid	a4c45060f4a7b02;
filename	GuiCallback.java;


desc
@@


1.1
log
@initial commit
@
text
@/* -*- Mode: java; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is Rhino code, released
 * May 6, 1999.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1997-1999 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s):
 * Igor Bukanov, igor@@fastmail.fm
 * Cameron McCormack
 *
 * Alternatively, the contents of this file may be used under the
 * terms of the GNU Public License (the "GPL"), in which case the
 * provisions of the GPL are applicable instead of those above.
 * If you wish to allow use of your version of this file only
 * under the terms of the GPL and not to allow others to use your
 * version of this file under the NPL, indicate your decision by
 * deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL.  If you do not delete
 * the provisions above, a recipient may use your version of this
 * file under either the NPL or the GPL.
 */
package org.mozilla.javascript.tools.debugger;

/**
 * Interface for communication between the debugger and its GUI.  This
 * should be implemented by the GUI.
 */
public interface GuiCallback {

    /**
     * Called when the source text of some script has been changed.
     */
    void updateSourceText(Dim.SourceInfo sourceInfo);

    /**
     * Called when the interrupt loop has been entered.
     */
    void enterInterrupt(Dim.StackFrame lastFrame,
                        String threadTitle,
                        String alertMessage);

    /**
     * Returns whether the current thread is the GUI's event thread.
     * This information is required to avoid blocking the event thread
     * from the debugger.
     */
    boolean isGuiEventThread();

    /**
     * Processes the next GUI event.  This manual pumping of GUI events
     * is necessary when the GUI event thread itself has been stopped.
     */
    void dispatchNextGuiEvent() throws InterruptedException;
}
@
